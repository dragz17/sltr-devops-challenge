name: Docker CI/CD

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., v1.0.0)"
        required: true
        default: "v1.0.0"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: dragz17/sltr-devops-boy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker image
        run: |
          TAG_VERSION=${{ github.event.inputs.tag }}
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TAG_VERSION .

      - name: Push Docker images
        run: |
          TAG_VERSION=${{ github.event.inputs.tag }}
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$TAG_VERSION
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to VM
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.VM_HOST }}
          USER: ${{ secrets.VM_USER }}
          IMAGE_NAME: dragz17/sltr-devops-boy
          CONTAINER_NAME: welcome-app
          
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $USER@$HOST << EOF
            echo "Connected to VM"
            docker pull $IMAGE_NAME:latest
            
            if [ \$(docker ps -q -f name=$CONTAINER_NAME) ]; then
                docker stop $CONTAINER_NAME
                docker rm $CONTAINER_NAME
            fi
            
            docker run -d --name $CONTAINER_NAME -p 5000:5000 $IMAGE_NAME:latest
            echo "Deployment successful!"
          EOF